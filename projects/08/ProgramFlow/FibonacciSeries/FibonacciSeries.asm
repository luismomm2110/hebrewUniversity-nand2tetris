//1 argument 1
@ARG
D=M
@1
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//2 pointer 1
@SP
AM=M-1
D=M
@4
M=D
//1 constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//2 that 0
@THAT
D=M
@0
D=A+D
@R13
M=D
@SP
AM=M-1
A=M
D=A
@R13
A=M
M=D
//1 constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//2 that 1
@THAT
D=M
@1
D=A+D
@R13
M=D
@SP
AM=M-1
A=M
D=A
@R13
A=M
M=D
//1 argument 0
@ARG
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//1 constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
AM=M-1
D=M
@SP
AM=M-1
M=M-D
@SP
M=M+1
//2 argument 0
@ARG
D=M
@0
D=A+D
@R13
M=D
@SP
AM=M-1
A=M
D=A
@R13
A=M
M=D
(null$MAIN_LOOP_START)
//1 argument 0
@ARG
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
@null$COMPUTE_ELEMENT
D;JNE
@null$END_PROGRAM
0;JMP
(null$COMPUTE_ELEMENT)
//1 that 0
@THAT
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//1 that 1
@THAT
D=M
@1
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
AM=M-1
M=D
@SP
AM=M-1
M=M+D
@SP
M=M+1
//2 that 2
@THAT
D=M
@2
D=A+D
@R13
M=D
@SP
AM=M-1
A=M
D=A
@R13
A=M
M=D
//1 pointer 1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
//1 constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
AM=M-1
M=D
@SP
AM=M-1
M=M+D
@SP
M=M+1
//2 pointer 1
@SP
AM=M-1
D=M
@4
M=D
//1 argument 0
@ARG
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//1 constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
AM=M-1
D=M
@SP
AM=M-1
M=M-D
@SP
M=M+1
//2 argument 0
@ARG
D=M
@0
D=A+D
@R13
M=D
@SP
AM=M-1
A=M
D=A
@R13
A=M
M=D
@null$MAIN_LOOP_START
0;JMP
(null$END_PROGRAM)
(END)
@END
0;JMP
